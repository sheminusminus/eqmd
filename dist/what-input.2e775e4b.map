{"version":3,"sources":["assets/vendor/foundation-6.4.2/js/vendor/what-input.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","currentInput","currentIntent","doc","document","documentElement","formInputs","functionList","ignoreMap","changeIntentMap","inputMap","keydown","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","inputTypes","isBuffering","isScrolling","mousePos","x","y","pointerMap","supportsPassive","opts","Object","defineProperty","get","window","addEventListener","e","setUp","detectWheel","addListeners","setInput","PointerEvent","updateInput","setIntent","MSPointerEvent","touchBuffer","passive","event","eventKey","which","value","type","pointerType","activeElem","activeElement","activeInput","notFormInput","nodeName","indexOf","toLowerCase","setAttribute","push","className","fireFunctions","screenX","screenY","i","len","length","function","undefined","wheelType","createElement","onmousewheel","Array","prototype","ask","opt","types","ignoreKeys","arr","onChange","funct","eventType"],"mappings":"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","file":"what-input.2e775e4b.map","sourcesContent":["/**\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\n * @version v4.2.0\n * @link https://github.com/ten1seven/what-input\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"whatInput\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"whatInput\"] = factory();\n\telse\n\t\troot[\"whatInput\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tmodule.exports = function () {\n\t  /*\n\t   * variables\n\t   */\n\n\t  // last used input type\n\t  var currentInput = 'initial';\n\n\t  // last used input intent\n\t  var currentIntent = null;\n\n\t  // cache document.documentElement\n\t  var doc = document.documentElement;\n\n\t  // form input types\n\t  var formInputs = ['input', 'select', 'textarea'];\n\n\t  var functionList = [];\n\n\t  // list of modifier keys commonly used with the mouse and\n\t  // can be safely ignored to prevent false keyboard detection\n\t  var ignoreMap = [16, // shift\n\t  17, // control\n\t  18, // alt\n\t  91, // Windows key / left Apple cmd\n\t  93 // Windows menu / right Apple cmd\n\t  ];\n\n\t  // list of keys for which we change intent even for form inputs\n\t  var changeIntentMap = [9 // tab\n\t  ];\n\n\t  // mapping of events to input types\n\t  var inputMap = {\n\t    keydown: 'keyboard',\n\t    mousedown: 'mouse',\n\t    mousemove: 'mouse',\n\t    MSPointerDown: 'pointer',\n\t    MSPointerMove: 'pointer',\n\t    pointerdown: 'pointer',\n\t    pointermove: 'pointer',\n\t    touchstart: 'touch'\n\t  };\n\n\t  // array of all used input types\n\t  var inputTypes = [];\n\n\t  // boolean: true if touch buffer is active\n\t  var isBuffering = false;\n\n\t  // boolean: true if the page is being scrolled\n\t  var isScrolling = false;\n\n\t  // store current mouse position\n\t  var mousePos = {\n\t    x: null,\n\t    y: null\n\t  };\n\n\t  // map of IE 10 pointer events\n\t  var pointerMap = {\n\t    2: 'touch',\n\t    3: 'touch', // treat pen like touch\n\t    4: 'mouse'\n\t  };\n\n\t  var supportsPassive = false;\n\n\t  try {\n\t    var opts = Object.defineProperty({}, 'passive', {\n\t      get: function get() {\n\t        supportsPassive = true;\n\t      }\n\t    });\n\n\t    window.addEventListener('test', null, opts);\n\t  } catch (e) {}\n\n\t  /*\n\t   * set up\n\t   */\n\n\t  var setUp = function setUp() {\n\t    // add correct mouse wheel event mapping to `inputMap`\n\t    inputMap[detectWheel()] = 'mouse';\n\n\t    addListeners();\n\t    setInput();\n\t  };\n\n\t  /*\n\t   * events\n\t   */\n\n\t  var addListeners = function addListeners() {\n\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t    // can only demonstrate potential, but not actual, interaction\n\t    // and are treated separately\n\n\t    // pointer events (mouse, pen, touch)\n\t    if (window.PointerEvent) {\n\t      doc.addEventListener('pointerdown', updateInput);\n\t      doc.addEventListener('pointermove', setIntent);\n\t    } else if (window.MSPointerEvent) {\n\t      doc.addEventListener('MSPointerDown', updateInput);\n\t      doc.addEventListener('MSPointerMove', setIntent);\n\t    } else {\n\t      // mouse events\n\t      doc.addEventListener('mousedown', updateInput);\n\t      doc.addEventListener('mousemove', setIntent);\n\n\t      // touch events\n\t      if ('ontouchstart' in window) {\n\t        doc.addEventListener('touchstart', touchBuffer);\n\t        doc.addEventListener('touchend', touchBuffer);\n\t      }\n\t    }\n\n\t    // mouse wheel\n\t    doc.addEventListener(detectWheel(), setIntent, supportsPassive ? { passive: true } : false);\n\n\t    // keyboard events\n\t    doc.addEventListener('keydown', updateInput);\n\t  };\n\n\t  // checks conditions before updating new input\n\t  var updateInput = function updateInput(event) {\n\t    // only execute if the touch buffer timer isn't running\n\t    if (!isBuffering) {\n\t      var eventKey = event.which;\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (currentInput !== value || currentIntent !== value) {\n\t        var activeElem = document.activeElement;\n\t        var activeInput = false;\n\t        var notFormInput = activeElem && activeElem.nodeName && formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1;\n\n\t        if (notFormInput || changeIntentMap.indexOf(eventKey) !== -1) {\n\t          activeInput = true;\n\t        }\n\n\t        if (value === 'touch' ||\n\t        // ignore mouse modifier keys\n\t        value === 'mouse' ||\n\t        // don't switch if the current element is a form input\n\t        value === 'keyboard' && eventKey && activeInput && ignoreMap.indexOf(eventKey) === -1) {\n\t          // set the current and catch-all variable\n\t          currentInput = currentIntent = value;\n\n\t          setInput();\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  // updates the doc and `inputTypes` array with new input\n\t  var setInput = function setInput() {\n\t    doc.setAttribute('data-whatinput', currentInput);\n\t    doc.setAttribute('data-whatintent', currentInput);\n\n\t    if (inputTypes.indexOf(currentInput) === -1) {\n\t      inputTypes.push(currentInput);\n\t      doc.className += ' whatinput-types-' + currentInput;\n\t    }\n\n\t    fireFunctions('input');\n\t  };\n\n\t  // updates input intent for `mousemove` and `pointermove`\n\t  var setIntent = function setIntent(event) {\n\t    // test to see if `mousemove` happened relative to the screen\n\t    // to detect scrolling versus mousemove\n\t    if (mousePos['x'] !== event.screenX || mousePos['y'] !== event.screenY) {\n\t      isScrolling = false;\n\n\t      mousePos['x'] = event.screenX;\n\t      mousePos['y'] = event.screenY;\n\t    } else {\n\t      isScrolling = true;\n\t    }\n\n\t    // only execute if the touch buffer timer isn't running\n\t    // or scrolling isn't happening\n\t    if (!isBuffering && !isScrolling) {\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (currentIntent !== value) {\n\t        currentIntent = value;\n\n\t        doc.setAttribute('data-whatintent', currentIntent);\n\n\t        fireFunctions('intent');\n\t      }\n\t    }\n\t  };\n\n\t  // buffers touch events because they frequently also fire mouse events\n\t  var touchBuffer = function touchBuffer(event) {\n\t    if (event.type === 'touchstart') {\n\t      isBuffering = false;\n\n\t      // set the current input\n\t      updateInput(event);\n\t    } else {\n\t      isBuffering = true;\n\t    }\n\t  };\n\n\t  var fireFunctions = function fireFunctions(type) {\n\t    for (var i = 0, len = functionList.length; i < len; i++) {\n\t      if (functionList[i].type === type) {\n\t        functionList[i].function.call(undefined, currentIntent);\n\t      }\n\t    }\n\t  };\n\n\t  /*\n\t   * utilities\n\t   */\n\n\t  var pointerType = function pointerType(event) {\n\t    if (typeof event.pointerType === 'number') {\n\t      return pointerMap[event.pointerType];\n\t    } else {\n\t      // treat pen like touch\n\t      return event.pointerType === 'pen' ? 'touch' : event.pointerType;\n\t    }\n\t  };\n\n\t  // detect version of mouse wheel event to use\n\t  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t  var detectWheel = function detectWheel() {\n\t    var wheelType = void 0;\n\n\t    // Modern browsers support \"wheel\"\n\t    if ('onwheel' in document.createElement('div')) {\n\t      wheelType = 'wheel';\n\t    } else {\n\t      // Webkit and IE support at least \"mousewheel\"\n\t      // or assume that remaining browsers are older Firefox\n\t      wheelType = document.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll';\n\t    }\n\n\t    return wheelType;\n\t  };\n\n\t  /*\n\t   * init\n\t   */\n\n\t  // don't start script unless browser cuts the mustard\n\t  // (also passes if polyfills are used)\n\t  if ('addEventListener' in window && Array.prototype.indexOf) {\n\t    setUp();\n\t  }\n\n\t  /*\n\t   * api\n\t   */\n\n\t  return {\n\t    // returns string: the current input type\n\t    // opt: 'loose'|'strict'\n\t    // 'strict' (default): returns the same value as the `data-whatinput` attribute\n\t    // 'loose': includes `data-whatintent` value if it's more current than `data-whatinput`\n\t    ask: function ask(opt) {\n\t      return opt === 'loose' ? currentIntent : currentInput;\n\t    },\n\n\t    // returns array: all the detected input types\n\t    types: function types() {\n\t      return inputTypes;\n\t    },\n\n\t    // overwrites ignored keys with provided array\n\t    ignoreKeys: function ignoreKeys(arr) {\n\t      ignoreMap = arr;\n\t    },\n\n\t    // attach functions to input and intent \"events\"\n\t    // funct: function to fire on change\n\t    // eventType: 'input'|'intent'\n\t    onChange: function onChange(funct, eventType) {\n\t      functionList.push({\n\t        function: funct,\n\t        type: eventType\n\t      });\n\t    }\n\t  };\n\t}();\n\n/***/ })\n/******/ ])\n});\n;"]}